<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Webhook URLs</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
  <script>
    tailwind.config = {
      theme: {
        extend: {
          keyframes: {
            fadein: { '0%': {opacity:0, transform:'translateY(6px)'}, '100%': {opacity:1, transform:'translateY(0)'} },
            scalein: { '0%': {opacity:0, transform:'scale(.96)'}, '100%': {opacity:1, transform:'scale(1)'} },
          },
          animation: { fadein:'fadein .25s ease-out', scalein:'scalein .2s ease-out' },
          boxShadow: { soft: '0 2px 20px -4px rgba(2,6,23,.08)' }
        }
      }
    }
  </script>
  <style>
    .glass{backdrop-filter:blur(10px);background:rgba(255,255,255,.75)}
    .field{display:flex;align-items:center;gap:.5rem}
    .field i{color:rgb(100 116 139)}
  </style>
</head>
<body class="min-h-screen bg-gradient-to-br from-slate-50 via-white to-emerald-50 text-slate-900">
  <section class="border-b border-slate-200/70 bg-white/70 glass">
    <div class="max-w-6xl mx-auto px-4 py-10">
      <div class="flex items-start gap-4">
        <div class="size-12 rounded-2xl bg-emerald-600 text-white grid place-items-center shadow-sm shrink-0">
          <i class="fa-solid fa-link text-lg"></i>
        </div>
        <div class="flex-1">
          <h1 class="text-3xl md:text-4xl font-bold tracking-tight">Webhook URLs</h1>
          <p class="mt-2 text-slate-600 text-base md:text-lg">Create endpoints, choose status & content-type, optionally forward requests, and inspect captures.</p>
          <div class="mt-4 flex flex-wrap items-center gap-3 text-sm text-slate-600">
            <span class="inline-flex items-center gap-2 px-2.5 py-1.5 rounded-lg bg-emerald-50 text-emerald-700 border border-emerald-100"><i class="fa-solid fa-bolt"></i> Fast mock responses</span>
            <span class="inline-flex items-center gap-2 px-2.5 py-1.5 rounded-lg bg-sky-50 text-sky-700 border border-sky-100"><i class="fa-solid fa-shuffle"></i> Forwarding supported</span>
            <span class="inline-flex items-center gap-2 px-2.5 py-1.5 rounded-lg bg-violet-50 text-violet-700 border border-violet-100"><i class="fa-regular fa-eye"></i> Request viewer</span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <main class="max-w-6xl mx-auto px-4 py-8">
    <!-- ADD URL • COMPOSER STYLE -->
    <div class="rounded-2xl border border-slate-200 shadow-soft bg-white/80 glass">
      <!-- Header -->
      <div class="px-5 py-4 border-b border-slate-200 flex flex-wrap items-center gap-3">
        <div class="flex items-center gap-2 text-slate-800 font-semibold">
          <span class="inline-grid place-items-center size-7 rounded-lg bg-emerald-600 text-white text-sm">+</span>
          Create Endpoint
        </div>
        <div class="ml-auto text-xs text-slate-500 flex items-center gap-2">
          <i class="fa-regular fa-circle-question"></i> Mock instantly • Forward optionally
        </div>
      </div>

      <form method="post" action="/webhooks" class="p-5 space-y-4" id="create_form">
        <!-- Row 1 -->
        <div class="grid grid-cols-1 md:grid-cols-12 gap-3">
          <!-- Status -->
          <div class="md:col-span-4">
            <label class="text-xs font-medium text-slate-600 mb-1 block">Status</label>
            <div class="flex bg-white border border-slate-300 rounded-lg overflow-hidden">
              <select name="status" class="w-full appearance-none bg-transparent px-3 py-2 text-sm">
                <% statusChoices.forEach(choice => { %>
                  <option value="<%= choice %>"><%= choice %></option>
                <% }); %>
              </select>
              <div class="px-3 grid place-items-center text-slate-500 border-l border-slate-300">
                <i class="fa-solid fa-signal"></i>
              </div>
            </div>
            <p class="mt-1 text-[11px] text-slate-500">HTTP code to respond with.</p>
          </div>

          <!-- Type -->
          <div class="md:col-span-4">
            <label class="text-xs font-medium text-slate-600 mb-1 block">Type</label>
            <div class="flex bg-white border border-slate-300 rounded-lg overflow-hidden">
              <select id="ctype" name="content_type" class="w-full appearance-none bg-transparent px-3 py-2 text-sm">
                <option value="html">HTML</option>
                <option value="json">JSON</option>
                <option value="text">Plain</option>
                <option value="xml">XML</option>
                <option value="other">Other</option>
              </select>
              <div class="px-3 grid place-items-center text-slate-500 border-l border-slate-300">
                <i class="fa-regular fa-file-code"></i>
              </div>
            </div>
            <p class="mt-1 text-[11px] text-slate-500">Sets the <code class="font-mono">Content-Type</code> header.</p>
          </div>

          <!-- Tags -->
          <div class="md:col-span-4">
            <label class="text-xs font-medium text-slate-600 mb-1 block">Tags</label>
            <div class="flex items-center gap-2 bg-white border border-slate-300 rounded-lg px-2 py-2 min-h-10">
              <input name="tags" type="text" placeholder="comma-separated tags, e.g. api,internal"
                     class="flex-1 bg-transparent text-sm text-slate-700 placeholder-slate-400 focus:outline-none" />
            </div>
            <p class="mt-1 text-[11px] text-slate-500">Optional. Enter comma-separated tags for the URL.</p>
          </div>
        </div>

        <!-- Row 2 -->
        <div class="grid grid-cols-1 md:grid-cols-12 gap-3">
          <div class="md:col-span-9">
            <label class="text-xs font-medium text-slate-600 mb-1 block">Forward to (optional)</label>
            <div class="flex bg-white border border-slate-300 rounded-lg overflow-hidden">
              <input name="destination" type="url" placeholder="https://example.com/receive"
                     class="w-full bg-transparent px-3 py-2 text-sm focus:outline-none" />
              <div class="px-3 grid place-items-center text-slate-500 border-l border-slate-300 w-min">
                <i class="fa-solid fa-arrow-turn-up"></i>
              </div>
            </div>
            <p class="mt-1 text-[11px] text-slate-500">If set, requests are proxied to this URL and logged.</p>
          </div>

          <!-- Presets -->
          <div class="md:col-span-3">
            <label class="text-xs font-medium text-slate-600 mb-1 block">Quick preset</label>
            <div class="flex bg-white border border-slate-300 rounded-lg overflow-hidden">
              <select id="preset" class="w-full bg-transparent px-3 py-2 text-sm">
                <option value="">None</option>
                <option value='{"status":"200","type":"json"}'>200 • JSON</option>
                <option value='{"status":"202","type":"text"}'>202 • Plain</option>
                <option value='{"status":"500","type":"html"}'>500 • HTML</option>
                <option value='{"status":"204","type":"other","ct":"application/problem+json"}'>204 • Custom</option>
              </select>
              <div class="px-3 grid place-items-center text-slate-500 border-l border-slate-300">
                <i class="fa-solid fa-wand-magic-sparkles"></i>
              </div>
            </div>
            <p class="mt-1 text-[11px] text-slate-500">Fills status/type instantly.</p>
          </div>
        </div>

        <!-- Advanced -->
        <div class="rounded-xl border border-slate-200 bg-slate-50/50">
          <button type="button" id="adv_toggle"
            class="w-full flex items-center justify-between px-4 py-2 text-sm text-slate-700">
            <span class="inline-flex items-center gap-2"><i class="fa-solid fa-angles-down"></i> Advanced</span>
            <span class="text-xs text-slate-500">Custom content-type</span>
          </button>
          <div id="adv_panel" class="px-4 pb-4 hidden">
            <div class="grid grid-cols-1 md:grid-cols-12 gap-3">
              <div class="md:col-span-6">
                <label class="text-xs font-medium text-slate-600 mb-1 block">Custom C-Type</label>
                <div id="custom_ct_wrap" class="flex bg-white border border-slate-300 rounded-lg overflow-hidden">
                  <input id="custom_ct" name="custom_content_type" type="text"
                         placeholder="application/problem+json"
                         class="w-full bg-transparent px-3 py-2 text-sm focus:outline-none" />
                  <div class="px-3 grid place-items-center text-slate-500 border-l border-slate-300 w-min">
                    <i class="fa-solid fa-code-branch"></i>
                  </div>
                </div>
                <p class="mt-1 text-[11px] text-slate-500">Only used when Type = Other.</p>
              </div>
              <div class="md:col-span-6 grid items-end">
                <div class="text-[11px] text-slate-500">
                  Tip: Keep JSON bodies small for instant mocks. Large payloads are fine but slower to preview.
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Submit -->
        <div class="flex items-center gap-3 pt-1">
          <button type="submit"
            class="inline-flex items-center gap-2 bg-emerald-600 hover:bg-emerald-500 text-white font-medium px-4 py-2 rounded-lg shadow-sm transition active:scale-[.98]">
            <i class="fa-solid fa-plus"></i> Add URL
          </button>
          <span class="text-xs text-slate-500">You can edit response body later on the detail page.</span>
        </div>
      </form>
    </div>

    <!-- LIST HEADER -->
    <div class="mt-6 flex items-center justify-between">
      <div class="text-slate-700 font-medium">Your Endpoints</div>
      <div class="flex items-center gap-2 text-xs text-slate-500"><i class="fa-regular fa-lightbulb"></i> Tip: Click a URL to view requests</div>
    </div>

    <!-- SYMMETRIC CARDS -->
    <% if (webhooks.length === 0) { %>
      <div class="mt-4 p-6 text-center text-slate-600 rounded-xl border border-dashed border-slate-300 bg-white/70">No URLs yet. Create one above.</div>
    <% } else { %>
      <div class="mt-4 grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
        <% webhooks.forEach(webhook => { %>
          <article class="grid grid-rows-[auto,1fr,auto] h-full rounded-2xl border border-slate-200 bg-white shadow-soft overflow-hidden">
            <!-- Header -->
            <div class="px-4 pt-4 pb-3 border-b border-slate-100 bg-gradient-to-br from-slate-50 to-white">
              <div class="flex items-start gap-2">
                <div class="size-9 rounded-xl bg-slate-900 text-white grid place-items-center shrink-0">
                  <i class="fa-solid fa-link text-sm"></i>
                </div>
                <div class="min-w-0">
                  <a href="/request/<%= encodeURIComponent(webhook.id) %>" class="font-mono text-sky-700 hover:underline decoration-2 underline-offset-2 break-all">
                    <span id="u-<%= webhook.id %>" data-href-rel="webhook/<%= encodeURIComponent(webhook.id) %>">webhook/<%= webhook.id %></span>
                  </a>
                  <div class="mt-1 text-xs text-slate-600 flex flex-wrap items-center gap-2">
                    <span>ID: <code class="font-mono"><%= webhook.id %></code></span>
                    <span>·</span>
                    <span class="inline-flex items-center gap-1 px-1.5 py-0.5 rounded bg-emerald-50 text-emerald-700 border border-emerald-100">
                      <i class="fa-solid fa-tag text-[10px]"></i><%= webhook.label %>
                    </span>
                    <% if (webhook.tags && webhook.tags.length > 0) { %>
                      <span class="ml-2 text-xs text-slate-600">Tags:
                        <% webhook.tags.forEach(function(t,i){ %>
                          <code class="font-mono ml-1"><%= t %></code><%= i < webhook.tags.length-1 ? ',' : '' %>
                        <% }); %>
                      </span>
                    <% } %>
                  </div>
                </div>
                <button type="button" class="ml-auto text-slate-500 hover:text-slate-700 size-8 grid place-items-center rounded-md hover:bg-slate-200/60"
                        data-copy="u-<%= webhook.id %>" title="Copy full URL" aria-label="Copy URL">
                  <i class="fa-regular fa-copy"></i>
                </button>
              </div>
            </div>

            <!-- Body -->
            <div class="px-4 py-4">
              <div class="grid grid-cols-2 gap-4 items-start">
                <div class="space-y-1">
                  <div class="text-xs text-slate-500">Status</div>
                  <div class="h-9 inline-flex items-center gap-2 px-2 py-1 rounded-md border border-slate-300 bg-slate-50 text-slate-700 text-sm">
                    <i class="fa-solid fa-signal"></i><%= webhook.status %>
                  </div>
                </div>
                <div class="space-y-1">
                  <div class="text-xs text-slate-500">Requests</div>
                  <div class="h-9 flex items-center font-mono text-slate-900"><%= webhook.request_count %></div>
                </div>
                <div class="col-span-2 space-y-1">
                  <div class="text-xs text-slate-500">Content-Type</div>
                  <div class="min-h-6 font-mono text-slate-900"><%= webhook.content_type %></div>
                </div>
                <div class="col-span-2 space-y-1">
                  <div class="text-xs text-slate-500">Forward To</div>
                  <div class="min-h-12">
                    <% if (webhook.destination) { %>
                      <a href="<%= webhook.destination %>" target="_blank" rel="noopener noreferrer" class="font-mono text-sky-700 hover:underline break-all"><%= webhook.destination %></a>
                    <% } else { %>
                      <span class="text-slate-400 text-sm">—</span>
                    <% } %>
                  </div>
                </div>
              </div>
            </div>

            <!-- Footer -->
            <div class="px-4 pb-4 pt-2 border-t border-slate-100 bg-slate-50/60">
              <div class="flex items-center gap-2">
                <a href="/request/<%= encodeURIComponent(webhook.id) %>" class="inline-flex items-center gap-2 bg-slate-900 hover:bg-slate-800 text-white font-medium px-3 py-2 rounded-lg shadow-sm transition">
                  <i class="fa-regular fa-eye"></i> View
                </a>
                <button data-open-delete="<%= webhook.id %>" data-webhook-label="<%= webhook.label %>" type="button"
                        class="inline-flex items-center gap-2 bg-rose-600 hover:bg-rose-500 text-white font-semibold px-3 py-2 rounded-lg shadow-sm transition">
                  <i class="fa-regular fa-trash-can"></i> Delete
                </button>
                <span class="ml-auto text-[11px] text-slate-500 hidden md:inline-flex items-center gap-1">
                  Press <span class="px-1 border rounded bg-white border-slate-300">Esc</span> to close dialog
                </span>
              </div>
            </div>
          </article>
        <% }); %>
      </div>
    <% } %>
  </main>

  <!-- Modal -->
  <div id="modal_overlay" class="fixed inset-0 bg-slate-900/40 backdrop-blur-sm opacity-0 pointer-events-none transition-opacity duration-200"></div>
  <div id="modal_panel" role="dialog" aria-modal="true" aria-labelledby="modal_title" aria-describedby="modal_desc" class="fixed inset-0 grid place-items-center pointer-events-none">
    <div id="modal_inner" class="w-full max-w-md mx-4 translate-y-4 opacity-0 pointer-events-auto">
      <div class="rounded-2xl bg-white shadow-xl border border-slate-200 p-5 animate-scalein">
        <div class="flex items-start gap-3">
          <div class="size-10 rounded-xl bg-rose-100 text-rose-700 grid place-items-center">
            <i class="fa-solid fa-triangle-exclamation"></i>
          </div>
          <div class="flex-1">
            <h2 id="modal_title" class="text-lg font-semibold">Delete webhook?</h2>
            <p id="modal_desc" class="text-sm text-slate-600 mt-1">This removes the endpoint and <strong>all logs</strong>. Cannot be undone.</p>
            <div class="mt-3 text-xs text-slate-500">
              <div>Label: <span id="modal_label" class="font-medium text-slate-700">—</span></div>
              <div>ID: <code id="modal_id" class="font-mono">—</code></div>
            </div>
          </div>
        </div>
        <div class="mt-5 flex items-center justify-end gap-2">
          <button id="btn_cancel" class="px-4 py-2 rounded-lg border border-slate-300 bg-white hover:bg-slate-50 text-slate-700 transition">Cancel</button>
          <button id="btn_confirm" class="inline-flex items-center gap-2 px-4 py-2 rounded-lg bg-rose-600 hover:bg-rose-500 text-white shadow-sm transition">
            <i class="fa-regular fa-trash-can"></i> Delete
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Toasts -->
  <div id="toast_region" class="fixed bottom-6 left-1/2 -translate-x-1/2 z-50 space-y-2"></div>

  <script>
    function showToast(msg){
      const t = document.createElement('div');
      t.className = 'bg-slate-900 text-white px-4 py-2 rounded-lg shadow-lg animate-fadein';
      t.textContent = msg;
      document.getElementById('toast_region').appendChild(t);
      setTimeout(()=>{ t.classList.add('opacity-0','transition','duration-300'); }, 1400);
      setTimeout(()=>{ t.remove(); }, 1800);
    }

    const modal = {
      overlay:null,panel:null,inner:null,idEl:null,labelEl:null,confirmBtn:null,cancelBtn:null,prevFocus:null,currentId:null,
      open(id,label){
        this.currentId=id; this.idEl.textContent=id; this.labelEl.textContent=label||'—';
        this.prevFocus = document.activeElement;
        this.overlay.classList.remove('pointer-events-none'); this.panel.classList.remove('pointer-events-none');
        requestAnimationFrame(()=>{ this.overlay.classList.add('opacity-100'); this.overlay.classList.remove('opacity-0'); this.inner.classList.remove('translate-y-4','opacity-0'); });
        this.confirmBtn.focus(); document.addEventListener('keydown', this._esc);
      },
      close(){
        this.inner.classList.add('translate-y-4','opacity-0','transition','duration-150');
        this.overlay.classList.remove('opacity-100'); this.overlay.classList.add('opacity-0');
        setTimeout(()=>{ this.overlay.classList.add('pointer-events-none'); this.panel.classList.add('pointer-events-none'); this.inner.classList.remove('transition','duration-150'); },150);
        document.removeEventListener('keydown', this._esc); this.currentId=null;
        if(this.prevFocus && this.prevFocus.focus) this.prevFocus.focus();
      },
      _esc(e){ if(e.key==='Escape') modal.close(); }
    };

    document.addEventListener('DOMContentLoaded', function(){
      // Modal refs
      modal.overlay = document.getElementById('modal_overlay');
      modal.panel   = document.getElementById('modal_panel');
      modal.inner   = document.getElementById('modal_inner');
      modal.idEl    = document.getElementById('modal_id');
      modal.labelEl = document.getElementById('modal_label');
      modal.confirmBtn = document.getElementById('btn_confirm');
      modal.cancelBtn  = document.getElementById('btn_cancel');

      // Full origin URLs
      const origin = window.location.origin.replace(/\/$/, '');
      document.querySelectorAll('[data-href-rel]').forEach(el=>{
        el.textContent = origin + '/' + el.getAttribute('data-href-rel').replace(/^\//,'');
      });

      // Copy buttons
      document.querySelectorAll('[data-copy]').forEach(btn=>{
        btn.addEventListener('click', ()=>{
          const target = document.getElementById(btn.getAttribute('data-copy'));
          if(target){ navigator.clipboard.writeText(target.textContent||'').then(()=>showToast('Copied URL to clipboard')); }
        });
      });

      // Advanced accordion
      const advToggle = document.getElementById('adv_toggle');
      const advPanel  = document.getElementById('adv_panel');
      if(advToggle && advPanel){
        advToggle.addEventListener('click', ()=> advPanel.classList.toggle('hidden'));
      }

      // Preset filler
      const presetSel = document.getElementById('preset');
      const statusSel = document.querySelector('select[name="status"]');
      const typeSel   = document.getElementById('ctype');
      const customCt  = document.getElementById('custom_ct');

      if(presetSel && statusSel && typeSel){
        presetSel.addEventListener('change', ()=>{
          if(!presetSel.value) return;
          try{
            const p = JSON.parse(presetSel.value);
            if(p.status) statusSel.value = p.status;
            if(p.type)   typeSel.value   = p.type;
            if(p.ct){
              if(advPanel) advPanel.classList.remove('hidden');
              if(customCt) customCt.value = p.ct;
            }
            typeSel.dispatchEvent(new Event('change'));
          }catch(_){}
        });
      }

      // Auto-open Advanced when Type = Other and enable/require custom C-Type
      function updateCustomCtState(){
        if(!typeSel) return;
        const isOther = typeSel.value === 'other';
        if(advPanel){
          if(isOther) advPanel.classList.remove('hidden');
        }
        if(customCt){
          customCt.disabled = !isOther;
          if(isOther){ customCt.setAttribute('required','required'); customCt.classList.remove('opacity-50'); }
          else { customCt.removeAttribute('required'); customCt.classList.add('opacity-50'); }
        }
      }

      if(typeSel){
        typeSel.addEventListener('change', updateCustomCtState);
        // initialize on load
        updateCustomCtState();
      }

      // Modal wiring
      document.querySelectorAll('[data-open-delete]').forEach(btn=>{
        btn.addEventListener('click', ()=> modal.open(btn.getAttribute('data-open-delete'), btn.getAttribute('data-webhook-label')||''));
      });
      modal.overlay.addEventListener('click', ()=>modal.close());
      modal.cancelBtn.addEventListener('click', ()=>modal.close());
      modal.confirmBtn.addEventListener('click', async function(){
        if(!modal.currentId) return;
        try{
          const r = await fetch(`/webhooks/${modal.currentId}`, { method:'DELETE', headers:{'Content-Type':'application/json'} });
          if(r.ok){ showToast('Webhook deleted'); setTimeout(()=>location.reload(), 350); }
          else { showToast('Error deleting webhook'); }
        }catch{ showToast('Error deleting webhook'); }
        finally{ modal.close(); }
      });

      // Form submit validation: require custom content-type when Type = other
      const createForm = document.getElementById('create_form');
      if(createForm){
        createForm.addEventListener('submit', function(e){
          try{
            const typeVal = typeSel ? typeSel.value : null;
            if(typeVal === 'other'){
              const val = customCt ? customCt.value.trim() : '';
              if(!val){
                e.preventDefault();
                showToast('Please enter a custom Content-Type for Type = Other');
                if(customCt) { customCt.focus(); }
                return false;
              }
            }
          }catch(_){ }
        });
      }
    });
  </script>
</body>
</html>
